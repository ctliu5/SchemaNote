@using SchemaNote.ViewModels
@model OverviewViewModel

@{
    ViewData["Title"] = "Overview";
    Table t = new Table();
    int i = 0;
}

@section Scripts
    {
    <script>
        Overview = {
            'objName': {
                name_cht: "物件名稱",
                json: @Html.Raw(Json.Serialize(Model.TableNameJson)),
            },
            'colName': {
                name_cht: "欄位名稱",
                json: @Html.Raw(Json.Serialize(Model.ColumnNameJson)),
            },
            'description': {
                name_cht: "中文名稱",
                json: @Html.Raw(Json.Serialize(Model.DescriptionJson)),
            },
            'remark': {
                name_cht: "備註",
                json: @Html.Raw(Json.Serialize(Model.RemarkJson)),
            },
        };
    </script>

    <script>        
        //初始化下拉選單
        window.onload = initialOption;
    </script>
}
<h1>Overview</h1>
<!-- 測試效能
<h2>ADO_dot_NET:@Model.ADO_dot_NET 毫秒</h2>
<h2>Dapper:@Model.Dapper 毫秒</h2>
<h2>ADO_dot_NET2:@Model.ADO_dot_NET2 毫秒</h2>
-->
@if (TempData["ErrorMessage"] != null)
{
    <h4 class="bg-danger">@Html.Raw(TempData["ErrorMessage"])</h4>
}

<div class="form-inline search">
    <div class="form-group form-group-lg">
        <label for="choose">搜尋項目</label>
        <select id="choose" class="form-control"></select>
    </div>
    <div class="form-group form-group-lg">
        <label for="switch">搜索方式</label>
        <select id="switch" class="form-control">
            <option value="fuzzy" selected>模糊搜索</option>
            <option value="exact">精確搜索</option>
        </select>
    </div>
    <div class="form-group form-group-lg">
        <input id="SearchTextBox" type="text" class="form-control" placeholder="Enter key words..." />
    </div>
    <div class="form-group form-group-lg">
        <input type="button" class="form-control" onclick="ExportExtendedPropScript()" value="匯出擴充屬性Script" />
    </div>
</div>
<br />
@foreach (var item in Model.Tables)
{
    i++;
    <div class="panel-group accordion" id="@Html.Raw(Common.accordion+i)" role="tablist" aria-multiselectable="true">
        <div class="panel panel-default ">
            <div class="panel-heading" role="tab">
                <span class="panel-title" role="button" data-toggle="collapse" data-parent="#@Html.Raw(Common.accordion+i)" href="#@Html.Raw("collapse"+i)" aria-expanded="false" aria-controls="@Html.Raw("collapse"+i)">
                    <span class="caret"></span>
                    <strong class="objName">
                        @Html.DisplayFor(modelItem => item.NAME)
                    </strong>
                </span>
                <a class="description text-info" asp-action="Details" asp-route-id="@item.OBJECT_ID">
                    @if (item.MS_Description == Common.DefaultValue)
                    {
                        <code>
                            @Html.DisplayFor(modelItem => item.MS_Description)
                        </code>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.MS_Description)
                    }
                </a>
                <span class="count" data-toggle="tooltip" data-placement="top" title="@Common.CountTip">
                    @Html.DisplayNameFor(model => t.QTY):<strong class="text-info">@Html.DisplayFor(modelItem => item.QTY)</strong>
                </span>
            </div>
            <div id="@Html.Raw("collapse"+i)" class="panel-body panel-collapse collapse tabDetail" role="tabpanel">
                <table class="tabDetail_left">
                    <tbody>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => t.TYPE_NAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TYPE_NAME)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => t.SCHEMA_NAME)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SCHEMA_NAME)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => t.CREATE_DATE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CREATE_DATE)
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.DisplayNameFor(model => t.MODIFY_DATE)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.MODIFY_DATE)
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="tabDetail_right">
                    <div>
                        @Html.DisplayNameFor(model => t.REMARK)
                    </div>
                    <div>
                        <a class="remark text-info" asp-action="Details" asp-route-id="@item.OBJECT_ID">
                            @if (item.REMARK == Common.DefaultValue)
                            {
                                <code>
                                    @Html.DisplayFor(modelItem => item.REMARK)
                                </code>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.REMARK)
                            }
                        </a>
                    </div>
                </div>
            </div>
            <table class="table table-bordered table-hover subTable" border="1">
                <partial name="_OverviewColumns" model="item.Columns" view-data="@(new ViewDataDictionary(ViewData){{ "TYPE", item.TYPE }})" />
                @*  ↓↓↓equal↓↓↓↓
                    @{await Html.RenderPartialAsync("_OverviewColumns", item.Columns);}
                *@
            </table>
        </div>
    </div>
}
